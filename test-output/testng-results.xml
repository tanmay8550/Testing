<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="6" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-04T23:54:28 IST" name="Suite" finished-at="2022-04-04T23:54:29 IST" duration-ms="435">
    <groups>
    </groups>
    <test started-at="2022-04-04T23:54:28 IST" name="Test" finished-at="2022-04-04T23:54:29 IST" duration-ms="435">
      <class name="testClassgandmasti.doublegandmasti">
        <test-method is-config="true" signature="startReport(java.lang.String,java.lang.String)[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:28 IST" name="startReport" finished-at="2022-04-04T23:54:29 IST" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="testCase1()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="testCase1" finished-at="2022-04-04T23:54:29 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="getResult" finished-at="2022-04-04T23:54:29 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase1 status=SUCCESS method=doublegandmasti.testCase1()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase2()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="testCase2" finished-at="2022-04-04T23:54:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="getResult" finished-at="2022-04-04T23:54:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase2 status=SUCCESS method=doublegandmasti.testCase2()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase3()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="testCase3" finished-at="2022-04-04T23:54:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase3 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="getResult" finished-at="2022-04-04T23:54:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase3 status=SUCCESS method=doublegandmasti.testCase3()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase4()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="testCase4" finished-at="2022-04-04T23:54:29 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testClassgandmasti.doublegandmasti.testCase4(doublegandmasti.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase4 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="getResult" finished-at="2022-04-04T23:54:29 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase4 status=FAILURE method=doublegandmasti.testCase4()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase5()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="testCase5" finished-at="2022-04-04T23:54:29 IST" duration-ms="1" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this test with exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this test with exception
at testClassgandmasti.doublegandmasti.testCase5(doublegandmasti.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase5 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="getResult" finished-at="2022-04-04T23:54:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase5 status=SKIP method=doublegandmasti.testCase5()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testClassgandmasti.doublegandmasti@4310d43]" started-at="2022-04-04T23:54:29 IST" name="tearDown" finished-at="2022-04-04T23:54:29 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testClassgandmasti.doublegandmasti -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
